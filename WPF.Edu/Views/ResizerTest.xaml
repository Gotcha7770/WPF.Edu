<UserControl x:Class="WPF.Edu.Views.ResizerTest"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:controls="clr-namespace:WPF.Edu.Controls"
             xmlns:viewModels="clr-namespace:WPF.Edu.ViewModels"
             xmlns:behaviors="clr-namespace:WPF.Edu.Behaviors"
             xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
             mc:Ignorable="d"
             d:DesignHeight="450" d:DesignWidth="800">

    <UserControl.DataContext>
        <Binding RelativeSource="{RelativeSource Self}" />
    </UserControl.DataContext>

    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="../Resources/ResizableStyle.xaml" />
            </ResourceDictionary.MergedDictionaries>

            <DataTemplate x:Key="HorizontalTestVMTemplate" DataType="viewModels:TestViewModel">
                <controls:ResizableControl ContentWidth="{Binding Width}">
                    <Border x:Name="Border"
                            Background="DodgerBlue"
                            VerticalAlignment="Stretch">
                        <TextBlock Text="{Binding Name}"
                                   VerticalAlignment="Top"
                                   HorizontalAlignment="Center" />
                    </Border>
                </controls:ResizableControl>
            </DataTemplate>

            <DataTemplate x:Key="VerticalTestVMTemplate" DataType="viewModels:TestViewModel">
                <controls:ResizableControl Orientation="Vertical"
                                           ContentHeight="{Binding Height}">
                    <Border x:Name="Border" Background="DodgerBlue"
                            Width="100">
                        <TextBlock Text="{Binding Name}"
                                   VerticalAlignment="Top"
                                   HorizontalAlignment="Center" />
                    </Border>
                </controls:ResizableControl>
            </DataTemplate>

        </ResourceDictionary>
    </UserControl.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition x:Name="FirstRow" Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition x:Name="FirstColumn" Width="Auto"/>
            <ColumnDefinition Width="Auto"/>
            <ColumnDefinition/>
        </Grid.ColumnDefinitions>
        <Border Background="Orange"/>
        <GridSplitter x:Name="VerticalSplitter"
                      Grid.Column="1" Grid.Row="0" Grid.RowSpan="3"
                      HorizontalAlignment="Center"
                      Width="4"/>
        <StackPanel x:Name="HorizontalList"
                    Grid.Column="2"
                    VerticalAlignment="Top">
            <i:Interaction.Behaviors>
                <behaviors:DataPipeBehavior Target="{Binding ElementName=FirstRow, Path=Height, Mode=OneWayToSource}" Source="ActualHeight" />
            </i:Interaction.Behaviors>
            <ListBox VerticalAlignment="Top"
                     Background="Aqua"
                     BorderBrush="Red"
                     BorderThickness="2"
                     ItemTemplate="{StaticResource VerticalTestVMTemplate}"
                     ItemsSource="{Binding Items}">
                <ListBox.ItemContainerStyle>
                    <Style TargetType="ListBoxItem" BasedOn="{StaticResource {x:Type ListBoxItem}}">
                        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                    </Style>
                </ListBox.ItemContainerStyle>
                <ListBox.ItemsPanel>
                    <ItemsPanelTemplate>
                        <StackPanel IsItemsHost="True" Margin="10" />
                    </ItemsPanelTemplate>
                </ListBox.ItemsPanel>
            </ListBox>
            <!-- <ListBox Background="Aqua" -->
            <!--          BorderBrush="Red" -->
            <!--          BorderThickness="2" -->
            <!--          ItemTemplate="{StaticResource VerticalTestVMTemplate}" -->
            <!--          ItemsSource="{Binding Items}"> -->
            <!--     <ListBox.ItemContainerStyle> -->
            <!--         <Style TargetType="ListBoxItem" BasedOn="{StaticResource {x:Type ListBoxItem}}"> -->
            <!--             <Setter Property="HorizontalContentAlignment" Value="Stretch" /> -->
            <!--         </Style> -->
            <!--     </ListBox.ItemContainerStyle> -->
            <!--     <ListBox.ItemsPanel> -->
            <!--         <ItemsPanelTemplate> -->
            <!--             <StackPanel IsItemsHost="True" Margin="10" /> -->
            <!--         </ItemsPanelTemplate> -->
            <!--     </ListBox.ItemsPanel> -->
            <!-- </ListBox> -->

        </StackPanel>
        <GridSplitter x:Name="HorizontalSplitter"
                      Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="3"
                      HorizontalAlignment="Stretch"
                      Height="4"/>
        <StackPanel x:Name="VerticalList"
                    Grid.Row="2"
                    Orientation="Horizontal"
                    HorizontalAlignment="Left">
            <i:Interaction.Behaviors>
                <behaviors:DataPipeBehavior Target="{Binding ElementName=FirstColumn, Path=Width, Mode=OneWayToSource}" Source="ActualWidth" />
            </i:Interaction.Behaviors>
            <ListBox HorizontalAlignment="Left"
                     Background="Aqua"
                     BorderBrush="Red"
                     BorderThickness="2"
                     ItemTemplate="{StaticResource HorizontalTestVMTemplate}"
                     ItemsSource="{Binding Items}">
                <ListBox.ItemContainerStyle>
                    <Style TargetType="ListBoxItem" BasedOn="{StaticResource {x:Type ListBoxItem}}">
                        <Setter Property="VerticalContentAlignment" Value="Stretch" />
                    </Style>
                </ListBox.ItemContainerStyle>
                <ListBox.ItemsPanel>
                    <ItemsPanelTemplate>
                        <StackPanel IsItemsHost="True" Orientation="Horizontal" Margin="10" />
                    </ItemsPanelTemplate>
                </ListBox.ItemsPanel>
            </ListBox>
            <!--<ListBox HorizontalAlignment="Left"
                 Background="Aqua"
                 BorderBrush="Red"
                 BorderThickness="2"
                 ItemTemplate="{StaticResource HorizontalTestVMTemplate}"
                 ItemsSource="{Binding Items}">
                <ListBox.ItemContainerStyle>
                    <Style TargetType="ListBoxItem" BasedOn="{StaticResource {x:Type ListBoxItem}}">
                        <Setter Property="VerticalContentAlignment" Value="Stretch" />
                    </Style>
                </ListBox.ItemContainerStyle>
                <ListBox.ItemsPanel>
                    <ItemsPanelTemplate>
                        <StackPanel IsItemsHost="True" Orientation="Horizontal" Margin="10" />
                    </ItemsPanelTemplate>
                </ListBox.ItemsPanel>
            </ListBox>-->
        </StackPanel>
        <Border Grid.Row="2" Grid.Column="2"/>
    </Grid>

</UserControl>